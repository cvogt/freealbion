<?xml version="1.0" encoding="UTF-8"?>
<a2e_shader version="1">
	<includes>global inferred_gbuffer</includes>
	
	<vertex_shader>
		<variables>
uniform mat4 local_mview;
uniform mat4 local_scale;

uniform mat4 mvpm;

in vec3 normal;
in vec2 texture_coord;

out vec3 out_normal;
out vec2 out_tex_coord;
		</variables>
		<program>
void main() {
	mat4 transform_mat = local_scale * local_mview;
	
	out_normal = vec3(transform_mat * vec4(normal, 1.0));
	out_tex_coord = texture_coord;
	
	gl_Position = mvpm * vec4(in_vertex, 1.0);
}
		</program>
	</vertex_shader>
	
	<fragment_shader>
		<variables>
uniform sampler2D diffuse_texture;
uniform vec2 Nuv;

in vec3 out_normal;
in vec2 out_tex_coord;
		</variables>
		<program>
void main() {
	check_mask_id();
	
	if(texture(diffuse_texture, out_tex_coord).a < 0.5) discard;
	
	// write to gbuffer
	write_gbuffer(out_normal, Nuv);
}
		</program>
	</fragment_shader>

</a2e_shader>