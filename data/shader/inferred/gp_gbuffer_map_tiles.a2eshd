<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE a2e_shader PUBLIC "-//A2E//DTD a2e_shader 2.0//EN" "a2e_shader.dtd">
<a2e_shader version="2">
	<includes>global inferred_gbuffer</includes>
	
	<vertex_shader>
uniform mat4 local_mview;
uniform mat4 local_scale;

uniform mat4 mvpm;

in vec3 normal;
in vec2 texture_coord;

out vec3 out_normal;
out vec2 out_tex_coord;

void main() {
	mat4 transform_mat = local_scale * local_mview;
	
	out_normal = mat3(transform_mat) * normal;
	out_tex_coord = texture_coord;
	
	gl_Position = mvpm * vec4(in_vertex, 1.0);
}
	</vertex_shader>
	
	<fragment_shader>
uniform sampler2D diffuse_texture;
<option nomatch="*aux_texture">
uniform vec2 Nuv;
</option>
<option match="*aux_texture">
uniform sampler2D aux_texture;
</option>

in vec3 out_normal;
in vec2 out_tex_coord;

void main() {
	check_mask_id();
	
	if(texture(diffuse_texture, out_tex_coord).a < 0.5) discard;
	
	<option match="*aux_texture">
	vec2 Nuv = texture(aux_texture, out_tex_coord).xy * 1536.0;
	</option>
	
	// write to gbuffer
	write_gbuffer(out_normal, Nuv);
}
	</fragment_shader>

</a2e_shader>