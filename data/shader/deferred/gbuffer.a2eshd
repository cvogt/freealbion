<?xml version="1.0" encoding="UTF-8"?>
<a2e_shader version="1">
	<includes>gbuffer</includes>
	
	<vertex_shader>
		<variables>
			uniform mat4 local_mview;
			uniform mat4 local_scale;
			
			attribute vec3 normal;
			attribute vec2 texture_coord;
			
			varying vec3 out_normal;
			varying vec2 out_tex_coord;
		</variables>
		<program>
void main() {
			mat4 transform_mat = local_scale * local_mview;
			
			out_normal = vec3(transform_mat * vec4(normal, 1.0));
			out_tex_coord = texture_coord;
			
			gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;
}
		</program>
	</vertex_shader>
	
	<fragment_shader>
		<variables>
			uniform sampler2D diffuse_texture;
			uniform sampler2D specular_texture;
			uniform vec2 Nuv;
			
			varying vec3 out_normal;
			varying vec2 out_tex_coord;
		</variables>
		<program>
void main() {
			vec4 diffuse_color = texture2D(diffuse_texture, out_tex_coord);
			vec4 specular_color = texture2D(specular_texture, out_tex_coord);
			
			// write to gbuffer
			write_gbuffer(diffuse_color.rgb, specular_color.rgb, out_normal, Nuv);
}
		</program>
	</fragment_shader>

</a2e_shader>